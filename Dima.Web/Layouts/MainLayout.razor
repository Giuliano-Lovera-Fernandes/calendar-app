@inherits LayoutComponentBase

<MudThemeProvider @ref="_mudThemeProvider" @bind-IsDarkMode="_isDarkMode" Theme="Configuration.Theme" />

<MudSnackbarProvider />
<MudDialogProvider></MudDialogProvider>
<MudPopoverProvider></MudPopoverProvider>
<AuthorizeView>
    <Authorized>
        <MudLayout>
            <MudAppBar>            
            <MudIconButton 
                Icon="@Icons.Material.Filled.Menu" 
                Color="@Color.Inherit"
                Edge="Edge.Start"
                OnClick="ToggleDrawer"
            ></MudIconButton>
                Dima
                <MudSpacer />
                <MudButton Href="/eventos/adicionar" Variant="Variant.Text" StartIcon="@Icons.Material.TwoTone.Add">NOVO EVENTO</MudButton>
                <MudSpacer />
                <MudText Typo="Typo.caption">
                    @context.User.Identity?.Name
                </MudText>
                <MudSwitch 
                    T="bool" 
                    Color="Color.Inherit"  
                    @bind-Value="_isDarkMode" 
                    Class="ma-4"
                    ThumbIcon="@Icons.Material.TwoTone.Lightbulb"
                ></MudSwitch>
                <p>Modo escuro: @_isDarkMode</p>
            </MudAppBar>
            <MudDrawer @bind-Open="@_isDrawerOpened">
                <NavBMenu></NavBMenu>
            </MudDrawer>
            <MudMainContent>
                <MudContainer 
                              Class="mt-4">
                    @Body
                </MudContainer>
            </MudMainContent>
        </MudLayout>
    </Authorized>
    <NotAuthorized>
        <LoginRedirect></LoginRedirect>
    </NotAuthorized>
</AuthorizeView>


@code{
    private bool _isDrawerOpened = true;
    private bool _isDarkMode = false;
    private MudThemeProvider _mudThemeProvider = null!;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _isDarkMode = await _mudThemeProvider.GetSystemPreference();
            await _mudThemeProvider.WatchSystemPreference(OnSystemPreferenceChanged);
            StateHasChanged();
        }
    }

    private Task OnSystemPreferenceChanged(bool newValue)
    {
        _isDarkMode = newValue;
        StateHasChanged();
        return Task.CompletedTask;
    }

    private void ToggleDrawer()
    {
        _isDrawerOpened = !_isDrawerOpened;
    }
}


@* <div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">About</a>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div> *@
